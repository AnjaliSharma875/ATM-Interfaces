import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.*;

public class ATMProject{
    private double balance = 1000.00;
    private JFrame frame;
    private JTextField amountField;
    private JLabel balanceLabel;
    
    public ATMProject() {
        frame = new JFrame("ATM Machine");
        frame.setSize(300, 300);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setLayout(new GridLayout(5, 1));
        
        balanceLabel = new JLabel("Balance: $" + balance, SwingConstants.CENTER);
        frame.add(balanceLabel);
        
        amountField = new JTextField();
        frame.add(amountField);
        
        JButton depositButton = new JButton("Deposit");
        JButton withdrawButton = new JButton("Withdraw");
        JButton exitButton = new JButton("Exit");

         
        depositButton.setBackground(Color.yellow);
        withdrawButton.setBackground(Color.PINK);
        exitButton.setBackground(Color.WHITE);

        
        depositButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                deposit();
            }
        });
        
        withdrawButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                withdraw();
            }
        });
        
        exitButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                frame.dispose();
            }
        });
        
        frame.add(depositButton);
        frame.add(withdrawButton);
        frame.add(exitButton);
        
        frame.setVisible(true);
    }
    
    private void deposit() {
        try {
            double amount = Double.parseDouble(amountField.getText());
            if (amount > 0) {
                balance += amount;
                balanceLabel.setText("Balance: $" + balance);
                JOptionPane.showMessageDialog(frame, "Deposited: $" + amount);
            } else {
                JOptionPane.showMessageDialog(frame, "Enter a valid amount.");
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(frame, "Invalid input. Enter a number.");
        }
    }
    
    private void withdraw() {
        try {
            double amount = Double.parseDouble(amountField.getText());
            if (amount > 0 && amount <= balance) {
                balance -= amount;
                balanceLabel.setText("Balance: $" + balance);
                JOptionPane.showMessageDialog(frame, "Withdrawn: $" + amount);
            } else {
                JOptionPane.showMessageDialog(frame, "Invalid amount or insufficient funds.");
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(frame, "Invalid input. Enter a number.");
        }
    }
    
    public static void main(String[] args) {
        new ATMProject();
    }
}
